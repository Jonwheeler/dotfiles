source ~/bin/bash_colors.sh
source ~/bin/git-completion.bash

export PATH=$PATH:$HOME/bin
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/share/npm/bin:$PATH
export PATH=$PATH:~/.composer/vendor/bin
export PATH=$GOPATH/bin:$PATH
# Shell aliases
#
alias vi="/Applications/MacVim.app/Contents/MacOS/Vim"
alias vim="/Applications/MacVim.app/Contents/MacOS/Vim"

alias ls='ls -G'
alias la='ls -la'
alias '..'='cd .. && echo "--> now at: $(pwd)"'
alias copyssh='cat ~/.ssh/id_rsa.pub | pbcopy && echo "Public key was copied into the clipboard."'
alias copyignore="cat ~/.gitignore.sample | pbcopy && echo sample git ignore copied to the clipboard."
alias shadowpass="openssl passwd -1"

# Git aliases
#
alias gs='git st'
alias gc='git commit'
alias gd='git diff'
alias hist='git sl'
alias gp='git push'
alias branch='git checkout -b'
alias master='git checkout master'
alias grh="git reset --hard"
alias co="git checkout"
alias gbd="git branch -D"

# Some other dev-related aliases
#
alias b="bundle"
alias be="bundle exec"
alias bi="bundle install"
alias bu="bundle update"
alias r='rake'

# Rails stuff
#
alias rs="rails server thin"
alias rc="rails console"
alias rdm="rake db:migrate"
alias rsl="rake db:schema:load RAILS_ENV=test"
alias teardown="rake db:migrate:down VERSION=0 && rake db:migrate:down VERSION=0 RAILS_ENV=test"
# Vagrant
#
alias v="vagrant"
alias vs="vagrant up"
alias vd="vagrant halt"

# Homestead VM
alias h="homestead"
alias hu="homestead up"
alias hh="homestead halt"

# EmberCli
#
alias es="ember serve"

# Zeus
#
alias z="zeus"
alias zs="zeus start"
alias zt="zeus rspec spec/"
alias zc="zeus cucumber features/"
alias zrun="zeus rspec spec/ && zeus cucumber features/"
alias zp="zeus parallel_rspec spec/"
# Navigation
#
alias code="cd ~/code/ && ls"
# Simple server
#
function sserve() {
  python -m SimpleHTTPServer "$@";
}
# Foreman
#
alias fs="foreman start"

alias simulator="open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app"

# ------------------------------------------------------------------------------
export EDITOR='vi'
export LSCOLORS="ExGxBxDxCxEgEdxBxgxcxd"
export GREP_OPTIONS="--color"
# Git prompt components
function minutes_since_last_commit {
  now=`date +%s`
  last_commit=`git log --pretty=format:'%at' -1`
  seconds_since_last_commit=$((now-last_commit))
  minutes_since_last_commit=$((seconds_since_last_commit/60))
  echo $minutes_since_last_commit
}

grb_git_prompt() {
  local g="$(__gitdir)"
  if [ -n "$g" ]; then
    local MINUTES_SINCE_LAST_COMMIT=`minutes_since_last_commit`
    if [ "$MINUTES_SINCE_LAST_COMMIT" -gt 30 ]; then
      local COLOR=${RED}
    elif [ "$MINUTES_SINCE_LAST_COMMIT" -gt 10 ]; then
      local COLOR=${YELLOW}
    else
      local COLOR=${GREEN}
    fi
    local SINCE_LAST_COMMIT="${COLOR}$(minutes_since_last_commit)m${NORMAL}"
    # The __git_ps1 function inserts the current git branch where %s is
    local GIT_PROMPT=`__git_ps1 "(%s|${SINCE_LAST_COMMIT})"`
    echo ${GIT_PROMPT}
  fi
}

#PS1="\h:\W\$(grb_git_prompt) \u\$ "
PS1="\$(grb_git_prompt) -> "

activate_virtualenv() {
  if [ -f env/bin/activate ]; then . env/bin/activate;
  elif [ -f ../env/bin/activate ]; then . ../env/bin/activate;
  elif [ -f ../../env/bin/activate ]; then . ../../env/bin/activate;
  elif [ -f ../../../env/bin/activate ]; then . ../../../env/bin/activate;
  fi
}

python_module_dir () {
  echo "$(python -c "import os.path as _, ${1}; \
    print _.dirname(_.realpath(${1}.__file__[:-1]))"
  )"
}

export TERM='xterm-256color'

dds() {
  ssh 104.236.108.105 -l vm-$1
}

convertAllToMP4 () {
  for i in $(ls *mkv); do ffmpeg -i $i -vcodec copy -acodec copy $i.mp4; done;
}

function homestead() {
  ( cd ~/Homestead && vagrant $* )
}

function addr() {
  ifconfig -a        |
  grep 'inet '       |
  grep broadcast     |
  awk '{ print $2 }'
}

function markdownr() {
  pandoc $1 | lynx -stdin
}

[ -s "/Users/Jon/.nvm/nvm.sh" ] && . "/Users/Jon/.nvm/nvm.sh" # This loads nvm
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
